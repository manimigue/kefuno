{"version":3,"sources":["data/ticket.js","containers/Ticket.jsx"],"names":["ticketInfo","on","className","ticketTypes","Tickets","props","addTicket","state","ticketTypeNum","setState","reduceTicket","onWhich","component","style","marginBottom","gaSubmit","action","ReactGA","event","category","window","scrollTo","this","ticketSelect","type","toString","key","name","as","disabled","map","t","value","Array","from","v","num","Helmet","method","Fragment","length","collapse","when","duration","onClick","placeholder","Component"],"mappings":"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","file":"static/js/21.da0f3914.chunk.js","sourcesContent":["import React from 'react'\n\nexport const ticketInfo = ({on}) => (\n  on !== \"infoCommingSoon\" ? \n  <div className='ticket-info'>\n    <h3>チケット情報</h3>\n    <p><b>先行予約チケット（自由席・無料）</b></p>\n    <p><b>当日チケット（自由席・無料）</b></p>\n    <ul>\n      <li>当日チケットの引き換えは当日 13:00 より開始します。</li>\n      <li>当日チケットの枚数は先行予約チケットの状況に応じて変動するため、予めご了承ください。</li>\n    </ul>\n    <p>本公演では未就学児のゲストの方もご来場して頂くことが出来ます。予めご了承ください。また、未就学児をお連れのゲストの方は演奏中、周りの方にご配慮頂きますようお願いいたします。</p>\n  </div> :\n  <div className='ticket-info commingsoon'>\n    <div>Comming Soon...</div>\n  </div>\n)\n\nexport const ticketTypes = [ \"大人\", \"子供\" ]\nexport const ticketMax = 5\n","import React, { Component } from 'react';\nimport Fade from 'react-reveal/Fade';\nimport ReactGA from 'react-ga';\nimport {Helmet} from 'react-helmet';\n\nimport {ticketInfo as Info, ticketTypes, ticketMax} from '../data/ticket';\n\nimport '../sass/main/ticket.scss'\n\nclass Tickets extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ticketTypeNum : 1,\n      on : \"infoCommingSoon\",\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  addTicket = () => {\n    if (this.state.ticketTypeNum < 3){\n      this.setState({\n        ticketTypeNum : this.state.ticketTypeNum + 1\n      })\n    }\n  }\n\n  reduceTicket = () => {\n    if (this.state.ticketTypeNum > 1){\n      this.setState({\n        ticketTypeNum : this.state.ticketTypeNum - 1\n      })\n    }\n  }\n\n  onWhich = (on,component) => {\n    switch (on) {\n      case \"onSale\":\n        return component;\n      case \"infoCommingSoon\":\n        return ;\n      case \"saleCommingSoon\":\n        return <h5 style={{marginBottom:\"30px\"}}>Comming soon</h5>;\n      case \"end\":\n        return <h5 style={{marginBottom:\"30px\"}}>販売終了しました。</h5>;\n      default:\n        return ;\n    }\n  }\n\n  gaSubmit = (action) => {\n    ReactGA.event({\n      category: 'User',\n      action: action\n    });\n  }\n\n  render() {\n    const mail = \"kefuno2019@gmail.com\";\n    const ticketTypeNum = this.state.ticketTypeNum;\n    const on = this.state.on;\n    const ticketSelect = (type) => (\n      <div className={\"ticket-type type\" + type.toString()} key={type}>\n        <h5>券種{ticketTypeNum < 2 ? null : type.toString()}</h5>\n        <select \n        name={'券種' + type.toString()} \n        as=\"select\" \n        disabled={type > ticketTypeNum}>\n          {\n            ticketTypes.map((t) => (<option key={t} value={t}>{t}</option>))\n          }\n        </select>\n        <h5>枚数</h5>\n        <select className=\"formControl\"\n        name={'枚数' + type.toString()} \n        as=\"select\" \n        disabled={type > ticketTypeNum}>\n          {\n            Array.from(Array(ticketMax), (v, num) => (<option key={type * ticketMax + num} value={num + 1}>{num + 1}</option>))\n          }\n        </select>\n      </div>\n    )\n    const ticketSelections = () => (\n      <React.Fragment>\n        { ticketSelect(1) } \n        { ticketTypes.length > 1 ? \n          <React.Fragment>\n            {Array.from(Array(ticketTypes.length -1 ), (v,num) => (\n              <Fade key={num} collapse when={num+2 <= ticketTypeNum}>\n                {ticketSelect(num+2)}\n              </Fade>\n            ))}\n            <div className=\"manageTicketTypes\">\n              <Fade duration={500} when={ticketTypeNum < ticketTypes.length} >\n                <div className='add'>\n                  <button type=\"button\" onClick={this.addTicket}> + </button>\n                </div>\n              </Fade>\n              <Fade duration={500} when={ticketTypeNum > 1}>\n                <div className='reduce'>\n                  <button type=\"button\" onClick={this.reduceTicket}> - </button>\n                </div>\n              </Fade>\n            </div>\n          </ React.Fragment>\n        : null\n        }\n      </React.Fragment>\n    )\n\n    const ticketForm = () => (\n      <div className='ticket-buy' >\n        <h4>チケット予約</h4>\n        <div className='ticket-form'>\n          <p>下記のフォームに入力していただき、送信してください。<br/>1 週間以内に確認の連絡を送らせて頂きます。</p>\n          <form method=\"POST\" action={\"https://formspree.io/\" + mail} >\n            { ticketSelections() }\n            <h5>代表者名</h5>\n            <input type='text' name='代表者名' placeholder=\"佐藤　太郎\" />\n            <h5>メールアドレス</h5>\n            <input type=\"email\" name=\"返信先メールアドレス\" placeholder=\"you@example.com\"/>\n            <h5>電話番号</h5>\n            <input type=\"tel\" name=\"返信先電話番号\" placeholder=\"09012345678\"/>\n            <h5>その他お問い合わせ</h5>\n            <textarea name='お問い合わせ内容'></textarea>\n            <input className='submit' type=\"submit\" value='Send' onClick={() => this.gaSubmit('Tickets reservation')}/>\n          </form>\n        </div>\n      </div>\n    )\n\n    return (\n      <div className='ticket'>\n        <Helmet>\n          <title>kefuno. チケット情報</title>\n        </Helmet>\n        <div className=\"title\"><h2 >Ticket</h2></div>\n        <Info on={on}/>\n        {this.onWhich(on,ticketForm())}\n      </div>\n\n    );\n  }\n}\n\nexport default Tickets;"],"sourceRoot":""}