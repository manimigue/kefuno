{"version":3,"sources":["containers/Article.jsx"],"names":["Article","id","type","delHome","selectHome","root","url","useParams","useState","md","setMd","error","setError","useEffect","axios","AxiosBase","create","baseURL","urljoin","a","get","String","response","data","content","match","fetchMd","className","source","escapeHtml","renderers","props","alt","src"],"mappings":"mOAqDeA,UA7CC,SAAC,GAA6C,IAA3CC,EAA0C,EAA1CA,GAAIC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,QAASC,EAAuB,EAAvBA,WAAYC,EAAW,EAAXA,KAC1CC,EAAQC,cAARD,IADqD,EAEvCE,mBAAS,cAF8B,mBAEpDC,EAFoD,KAEhDC,EAFgD,OAG/BF,mBAAS,MAHsB,mBAGnDG,EAHmD,KAG5CC,EAH4C,KA6B3D,OAxBAC,qBAAU,WACR,IAAMC,EAAQC,IAAUC,OAAO,CAC7BC,QAASC,IAAQb,EAAMH,EAAO,gBAEnB,uCAAG,WAAOD,EAAIK,GAAX,mBAAAa,EAAA,0DACVlB,EADU,0CAGaa,EAAMM,IAAIC,OAAOpB,IAH9B,OAGJqB,EAHI,OAIVZ,EAAMY,EAASC,KAAKC,SAJV,gDAMVZ,EAAS,2FANC,iDAUJX,EAAKK,EAAImB,MAAM,eAAe,GAV1B,UAWaX,EAAMM,IAAIC,OAAOpB,IAX9B,QAWJqB,EAXI,OAYVZ,EAAMY,EAASC,KAAKC,SAZV,mDAcVZ,EAAS,2FAdC,iEAAH,wDAkBbc,CAAQzB,EAAIK,KACX,CAACL,EAAIK,EAAKD,EAAMH,IAEjB,yBAAKyB,UAAU,kBACb,kBAAC,IAAD,CAAMzB,KAAMA,EAAMC,QAASA,EAASC,WAAYA,GAAhD,uBACA,kBAAC,IAAD,CACEuB,UAAU,UACVC,OAAQjB,EAAQU,OAAOV,GAASF,EAChCoB,YAAY,EACZC,UAAW,CACT,MAAU,SAACC,GAAD,OAAW,yCAASA,EAAT,CAAgBC,IAAKD,EAAMC,IAAKC,IAAKf,IAAQb,EAAK0B,EAAME,YAGjF,kBAAC,IAAD,CAAM/B,KAAMA,EAAMC,QAASA,EAASC,WAAYA,GAAhD","file":"static/js/21.1d5bfb4e.chunk.js","sourcesContent":["import React, { useEffect, useState } from 'react'\nimport { useParams } from \"react-router-dom\";\nimport AxiosBase from 'axios';\nimport MarkdownRender from \"@nteract/markdown\";\nimport urljoin from 'url-join';\n\nimport Back from '../component/Back'\n\nconst Article = ({ id, type, delHome, selectHome, root }) => {\n  let { url } = useParams();\n  const [md, setMd] = useState(\"loading...\")\n  const [ error, setError ] = useState(null)\n\n  useEffect(() => {\n    const axios = AxiosBase.create({\n      baseURL: urljoin(root, type + \"-articles\")\n    })\n    const fetchMd = async (id, url) => {\n      if (id) {\n        try {\n          const response = await axios.get(String(id));\n          setMd(response.data.content)\n        } catch (e) {\n          setError(\"## ページが見つかりませんでした\")\n        }\n      } else {\n        try {\n          const id = url.match(/^news(\\d+)_/)[1]\n          const response = await axios.get(String(id));\n          setMd(response.data.content)\n        } catch (e) {\n          setError(\"## ページが見つかりませんでした\")\n        }\n      }\n    }\n    fetchMd(id, url)\n  }, [id, url, root, type])\n  return (\n    <div className=\"articleContent\">\n      <Back type={type} delHome={delHome} selectHome={selectHome}>&#8249; 戻る</Back>\n      <MarkdownRender \n        className='article' \n        source={error ? String(error) : md}\n        escapeHtml={false}\n        renderers={{\n          \"image\" : (props) => <img {...props} alt={props.alt} src={urljoin(root,props.src)} />\n        }}\n      />\n      <Back type={type} delHome={delHome} selectHome={selectHome}>&#8249; 戻る</Back>\n    </div>\n  )\n}\n\nexport default Article\n"],"sourceRoot":""}