{"version":3,"sources":["data/ticket.js","containers/Ticket.jsx"],"names":["ticketInfo","className","ticketTypes","Tickets","props","addTicket","state","ticketTypeNum","setState","reduceTicket","onWhich","on","component","style","marginBottom","gaSubmit","action","ReactGA","event","category","window","scrollTo","this","ticketSelect","type","toString","key","Form","Control","name","as","disabled","map","t","value","Array","from","v","num","Helmet","Fragment","method","length","collapse","when","Button","onClick","placeholder","Component"],"mappings":"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","file":"static/js/20.d7f22200.chunk.js","sourcesContent":["import React from 'react'\n\nexport const ticketInfo = () => (\n  <div className='tickets-info'>\n    <h3>チケット情報</h3>\n    <p><b>先行予約チケット（自由席・無料）</b></p>\n    <p><b>当日チケット（自由席・無料）</b></p>\n    <ul>\n      <li>当日チケットの引き換えは当日 13:00 より開始します。</li>\n      <li>当日チケットの枚数は先行予約チケットの状況に応じて変動するため、予めご了承ください。</li>\n    </ul>\n    <p>本公演では未就学児のゲストの方もご来場して頂くことが出来ます。予めご了承ください。また、未就学児をお連れのゲストの方は演奏中、周りの方にご配慮頂きますようお願いいたします。</p>\n  </div>\n)\n\nexport const ticketTypes = [ \"大人\", \"子供\" ]\nexport const ticketMax = 5\n","import React, { Component } from 'react';\nimport Button from 'react-bootstrap/Button';\nimport Form from 'react-bootstrap/Form';\nimport Fade from 'react-reveal/Fade';\nimport ReactGA from 'react-ga';\nimport {Helmet} from 'react-helmet';\n\nimport {ticketInfo as Info, ticketTypes, ticketMax} from '../data/ticket';\n\nimport '../sass/main/ticket.scss'\n\nclass Tickets extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      ticketTypeNum : 1,\n      on : \"on\",\n    };\n  }\n\n  componentDidMount() {\n    window.scrollTo(0, 0)\n  }\n\n  addTicket = () => {\n    if (this.state.ticketTypeNum < 3){\n      this.setState({\n        ticketTypeNum : this.state.ticketTypeNum + 1\n      })\n    }\n  }\n\n  reduceTicket = () => {\n    if (this.state.ticketTypeNum > 1){\n      this.setState({\n        ticketTypeNum : this.state.ticketTypeNum - 1\n      })\n    }\n  }\n\n  onWhich = (on,component) => {\n    switch (on) {\n      case \"on\":\n        return component;\n      case \"commingSoon\":\n        return <h5 style={{marginBottom:\"30px\"}}>Comming soon</h5>;\n      case \"end\":\n        return <h5 style={{marginBottom:\"30px\"}}>販売終了しました。</h5>;\n      default:\n        return ;\n    }\n  }\n\n  gaSubmit = (action) => {\n    ReactGA.event({\n      category: 'User',\n      action: action\n    });\n  }\n\n  render() {\n    const mail = \"orchestra.musicart.ticket@gmail.com\";\n    const ticketTypeNum = this.state.ticketTypeNum;\n    const ticketSelect = (type) => (\n      <div className={\"ticket-type type\" + type.toString()} key={type}>\n        <h5>券種{ticketTypeNum < 2 ? null : type.toString()}</h5>\n        <Form.Control \n        name={'券種' + type.toString()} \n        as=\"select\" \n        disabled={type > ticketTypeNum}>\n          {\n            ticketTypes.map((t) => (<option key={t} value={t}>{t}</option>))\n          }\n        </Form.Control>\n        <h5>枚数</h5>\n        <Form.Control \n        name={'枚数' + type.toString()} \n        as=\"select\" \n        disabled={type > ticketTypeNum}>\n          {\n            Array.from(Array(ticketMax), (v, num) => (<option key={type * ticketMax + num} value={num + 1}>{num + 1}</option>))\n          }\n        </Form.Control>\n      </div>\n    )\n    const ticketSelections = () => (\n      <React.Fragment>\n        { ticketSelect(1) } \n        { ticketTypes.length > 1 ? \n          Array.from(Array(ticketTypes.length -1 ), (v,num) => (\n            <Fade key={num} collapse when={num+2 <= ticketTypeNum}>{ticketSelect(num+2)}</Fade>\n          ))\n        : null\n        }\n        { (ticketTypes.length > 1 && ticketTypeNum < ticketTypes.length) ? \n          <Button onClick={this.addTicket} className='add-ticketTypes'> + </Button>\n        : null\n        }\n        { (ticketTypes.length > 1 && ticketTypeNum > 1) ? \n          <Button onClick={this.reduceTicket} className='reduce-ticketTypes'> - </Button>\n        : null\n        }\n      </React.Fragment>\n    )\n\n    const ticketForm = () => (\n      <React.Fragment>\n        <p>下記のフォームに入力していただき、送信してください。<br/>1 週間以内に確認の連絡を送らせて頂きます。</p>\n        <form method=\"POST\" action={\"https://formspree.io/\" + mail} >\n          { ticketSelections() }\n          <h5>代表者名</h5>\n          <input type='text' name='代表者名' placeholder=\"佐藤　太郎\" />\n          <h5>メールアドレス</h5>\n          <input type=\"email\" name=\"返信先メールアドレス\" placeholder=\"you@example.com\"/>\n          <h5>電話番号</h5>\n          <input type=\"tel\" name=\"返信先電話番号\" placeholder=\"09012345678\"/>\n          <h5>その他お問い合わせ</h5>\n          <textarea name='お問い合わせ内容'></textarea>\n          <input className='submit' type=\"submit\" value='Send' onClick={() => this.gaSubmit('Tickets reservation')}/>\n        </form>\n      </React.Fragment>\n    )\n\n    return (\n      <div className='ticket'>\n        <Helmet>\n          <title>kefuno. チケット情報</title>\n        </Helmet>\n        <div className=\"title\"><h2 >Ticket</h2></div>\n        <Info />\n        <div className='ticket-buy' >\n          <h4>チケット予約</h4>\n          <div className='ticket-form'>\n            {this.onWhich(this.state.on,ticketForm())}\n          </div>\n        </div>\n      </div>\n\n    );\n  }\n}\n\nexport default Tickets;"],"sourceRoot":""}